
@use '_variable' as *;

@mixin commonIco {
    background: url('../images/common/ico_spr.png') no-repeat 0 0;background-size: toVw(334) auto;
}
@mixin commonBtn {
    background: url('../images/common/btn_spr.png') no-repeat 0 0;background-size: toVw(334) auto;
}

@mixin flex($justify:flex-start,$align:center) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
}
@mixin inlineflex($justify:flex-start,$align:center) {
    display: inline-flex;
    justify-content: $justify;
    align-items: $align;
}
@mixin ellipsis($lines: 1) { // 인자 값의 기본 값은 1
    @if ($lines == 1) {
	  display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    } @else {
      display: -webkit-box;
      overflow: hidden;
      text-overflow: ellipsis;
      -webkit-line-clamp: $lines;
      -webkit-box-orient: vertical;
    }
}
@mixin ir {
    display:block;overflow:hidden;height:0;width:0;margin:0;padding:0;font-size:0;line-height:0;
}
@mixin irTxt {
    display:block;overflow:hidden;height:0;width:0;margin:0;padding:0;font-size:0;line-height:0;text-indent: -9999em;
}
@mixin wh100 {
    width:100%;height:100%;
}
@mixin wh($w,$h) {
    width:toVw($w);height:toVw($h);
}
@mixin xyCenter {
    top:50%;left:50%;transform: translate(-50%,-50%);
}
@mixin yCenter {
    top:50%;transform: translateY(-50%);
}
@mixin xCenter {
    left:50%;transform: translateX(-50%);
}
@mixin dimmedBg ($bgColor) { 
    content:"";display:block;position:fixed;top:0;left:0;bottom:0;right:0;background-color:$bgColor;z-index:10000;
} 

//16:9 box
@mixin aspect-ratio($width, $height) {
    position: relative;
    &:before {
      display: block;
      content: "";
      width: 100%;
      padding-top: ($height / $width) * 100%;
    }
    > .content {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

//화살표(▶) @include iconArrowSolid(left,40px,40px,80px,#ff0000)
$sqrt_2: 1.41421356237;
@mixin iconArrowSolid($direction, $width, $height, $thick, $color){
	display: block;
	overflow: hidden;
	position: relative;
	width: $width;
	height: $height;

	&:before {
		position: absolute;
		top: 50%;
		left: 50%;
		content: '';
	}

	@if ($direction == 'up' or $direction == 'down') {
		$size: floor($width/$sqrt_2 - 2*$thick);
		$rate: 2*$height/$width;
		$margin-top : round($rate*$size/(2*$sqrt_2));

		&:before {
			width: $size;
			height: $size;
			@if ($rate == 1) {
				-webkit-transform: translate(-50%, -50%) rotate(45deg);
				transform: translate(-50%, -50%) rotate(45deg);
			} @else {
				-webkit-transform: translate(-50%, -50%) scale(1, $rate) rotate(45deg);
				transform: translate(-50%, -50%) scale(1, $rate) rotate(45deg);
			}

			@if ($direction == 'up') {
				margin-top: $margin-top;
				border: $thick solid $color;
				border-width: $thick 0 0 $thick;
			} @else if ($direction == 'down') {
				margin-top: - $margin-top;
				border: $thick solid $color;
				border-width: 0 $thick $thick 0;
			}
		}
	}  @else if ($direction == 'left' or $direction == 'right') {
		$size: floor($height/$sqrt_2 - 2*$thick);
		$rate: 2*$width/$height;
		$margin-left : round($rate*$size/(2*$sqrt_2));

		&:before {
			width: $size;
			height: $size;
			-webkit-transform: translate(-50%, -50%) scale($rate, 1) rotate(45deg);
			transform: translate(-50%, -50%) scale($rate, 1) rotate(45deg);

			@if ($direction == 'left') {
				margin-left: $margin-left;
				border: $thick solid $color;
				border-width: 0 0 $thick $thick;
			}  @else if ($direction == 'right') {
				margin-left: - $margin-left;
				border: $thick solid $color;
				border-width: $thick $thick 0 0;
			}
		}
	}
}